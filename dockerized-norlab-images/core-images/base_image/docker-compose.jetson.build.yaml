name: ${DN_COMPOSE_NAME}

services:

  # ====Fast test service==========================================================================
#  dependencies-test:
#    extends:
#      file: ../global-service-builder/docker-compose.global-service.build.yaml
#      service: global-service-builder
#    build:
#      context: .
#      dockerfile: Dockerfile.test
#      args:
#        BASE_IMAGE: nvcr.io/nvidia/l4t-jetpack
#        BASE_IMAGE_TAG: r35.2.1
#    image: ${DN_HUB:?err}/dn-dependencies-test:r35.2.1

  # ====Dockerized-NorLab dependencies=============================================================

  # ....dependencies-core..........................................................................

  base-image: # ›› no push build service
    extends:
      file: ../global-service-builder/docker-compose.global-service.build.yaml
      service: global-service-builder
    build:
      context: .
      dockerfile: Dockerfile.jetson
      target: squash-base-image
      args:
#        TMP_TEST: ${TMP_TEST:?err} # (CRITICAL) ToDo: on task end >> delete this line ←
        BASE_IMAGE: ${DEPENDENCIES_BASE_IMAGE:?err}
        BASE_IMAGE_TAG: ${DEPENDENCIES_BASE_IMAGE_TAG:?err}
        TAG_VERSION: ${TAG_VERSION:?err}
        # Base image env var transfer ('nvcr.io/nvidia/l4t-jetpack' specific)
        CUDA_HOME: ${BASE_IMG_ENV_CUDA_HOME:?err}
        NVIDIA_VISIBLE_DEVICES: ${BASE_IMG_ENV_NVIDIA_VISIBLE_DEVICES:?err}
        NVIDIA_DRIVER_CAPABILITIES: ${BASE_IMG_ENV_NVIDIA_DRIVER_CAPABILITIES:?err}
        PATH: ${BASE_IMG_ENV_PATH:?err}
        LD_LIBRARY_PATH: ${BASE_IMG_ENV_LD_LIBRARY_PATH:?err}
        # Base image env var transfer (jetson-container 'dustynv/ros' base specific)
        ROS_DISTRO: ${BASE_IMG_ENV_ROS_DISTRO:?err}
        ROS_ROOT: ${BASE_IMG_ENV_ROS_ROOT:?err}
        ROS_PYTHON_VERSION: ${BASE_IMG_ENV_ROS_PYTHON_VERSION:?err}
        RMW_IMPLEMENTATION: ${BASE_IMG_ENV_RMW_IMPLEMENTATION:?err}
        # The following env var does not appear in every jetson-container 'dustynv/ros' base images
        OPENBLAS_CORETYPE: ${BASE_IMG_ENV_OPENBLAS_CORETYPE}
        # Base image env var transfer (jetson-container pytorch related)
        LD_PRELOAD: ${BASE_IMG_ENV_LD_PRELOAD}
    image: ${DN_HUB:?err}/dn-base-image-jetson:${DN_IMAGE_TAG:?err}

  base-image-tester:
    extends: base-image
    build:
      target: squashed-base-image-tester
    depends_on:
      - base-image
