services:
  global-service-dev-config:
    build:
      context: "${DN_PATH:?err}/dockerized-norlab-images/core-images/global"
    #  no_cache: true  # Enforce full rebuild                               <-- mute on task end
    #command: bash -c "tree -L 1 -a && printenv | grep -i -e DN_ && bash" # <-- mute on task end
    tty: true
    stdin_open: true
    devices:
      - /dev/input/js0
    privileged: true
    environment:
      ROS_DOMAIN_ID: 1
      DISPLAY: ${DISPLAY}
      # DISPLAY: ${DISPLAY:-':0'} # set to 0 if DISPLAY is unset or none
      # DISPLAY: '169.254.205.89:0.0'
      QT_X11_NO_MITSHM: 1
    ports:
      - "2222:2222" # ssh pycharm-debugger
      - "6006:6006" # tensorboard
      # - "7777:7777" # gdbserver

  global-service-dev-config-jetson:
    extends:
      service: global-service-dev-config
    build:
      platforms:
        - linux/arm64
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw # Share system folder
    network_mode: host    # allow the container to have full access to the host’s networking system
    environment:
      NVIDIA_VISIBLE_DEVICES: all   # substitute for `--gpus all` flag
      # see https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/user-guide.html#environment-variables-oci-spec
      NVIDIA_DRIVER_CAPABILITIES: all
      # see https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/user-guide.html#driver-capabilities

  global-service-dev-config-darwin:
    extends:
      service: global-service-dev-config
    build:
      platforms:
        - linux/arm64
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    # Note: Port mapping on macosx is incompatible with network_mode: host
    network_mode: bridge

  global-service-multiarchitecture-build:
    build:
      context: "${DN_PATH:?err}/dockerized-norlab-images/core-images/global"
      dockerfile: Dockerfile
      platforms:
        - linux/arm64
        - linux/amd64

  global-service-builder-base-images-config:
    extends:
      service: global-service-multiarchitecture-build #ToDo: Keep unmuted for CI builds (!)
#      service: global-service-dev-config-jetson #ToDo: on dev task end >> mute this line ←
#      service: global-service-dev-config-darwin #ToDo: on dev task end >> mute this line ←
    build:
      context: "${DN_PATH:?err}/dockerized-norlab-images/core-images/global"
      dockerfile: Dockerfile
      additional_contexts:
        context-dn-container-tools: "${DN_PATH:?err}/dockerized-norlab-images/container-tools/"
        context-dn-submodules: "${DN_PATH:?err}/utilities/"
        context-dn-root: "${DN_PATH:?err}"
      args:
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
      platforms: !reset []
      labels:
        org.opencontainers.image.authors: "luc.coupal.1@ulaval.ca"
    pull_policy: build
    init: true  # Propagate exit code (See remark in task NMO-266)
    security_opt: # options needed for gdb debugging
      - seccomp=unconfined
      - apparmor=unconfined
    cap_add:
      - SYS_PTRACE
    pid: host
    ipc: host   # see comment  https://stable-baselines3.readthedocs.io/en/master/guide/install.html#run-the-images-cpu-gpu


  global-service-builder-config:
    extends:
      service: global-service-builder-base-images-config
    build:
      context: "${DN_PATH:?err}/dockerized-norlab-images/core-images/global"
      dockerfile: Dockerfile
    pull_policy: build

