
# (Priority) ToDo: on task end >> delete 'Dockerfile.debugging-tools'

ARG BASE_IMAGE
ARG BASE_IMAGE_TAG
FROM ${BASE_IMAGE:?err}:${BASE_IMAGE_TAG:?err} AS debugging-tools

# ===Service: ssh server===========================================================================
# install development utilities
RUN apt-get update \
    && apt-get install --assume-yes --no-install-recommends \
        openssh-server \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*


# ...Setup ssh server..............................................................................
WORKDIR ${DN_DEV_WORKSPACE}

# ssh port, remaped from default 22 to 2222
ARG DN_SSH_SERVER_PORT=2222
ENV DN_SSH_SERVER_PORT=${DN_SSH_SERVER_PORT}
EXPOSE ${DN_SSH_SERVER_PORT}

# Inspired from https://austinmorlan.com/posts/docker_clion_development/
RUN ( \
    echo "LogLevel DEBUG2"; \
    echo "PermitRootLogin yes"; \
    echo "PasswordAuthentication yes"; \
    echo "Port ${DN_SSH_SERVER_PORT}"; \
    echo "Subsystem sftp /usr/lib/openssh/sftp-server"; \
  ) > /etc/ssh/sshd_config_dockerized_norlab_openssh_server \
  && mkdir /run/sshd

# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

## gdbserver port
#EXPOSE 7777

# ...Add new user..................................................................................
ARG NEW_USER=pycharm-debugger
ENV DN_SSH_SERVER_USER=${NEW_USER}
ARG DN_SSH_SERVER_USER_PASSWORD=lasagne

RUN useradd -m ${NEW_USER} \
  && yes ${DN_SSH_SERVER_USER_PASSWORD} | passwd ${NEW_USER}
# Add the 'video' groups to new user as it's required for GPU access.
# (not a problem on norlab-og but mandatory on Jetson device)
# Ref: https://forums.developer.nvidia.com/t/how-to-properly-create-new-users/68660/2
RUN usermod -a -G video,sudo ${NEW_USER}

# ...root config...................................................................................
# user:newpassword
RUN echo "root:${DN_SSH_SERVER_USER_PASSWORD}" | chpasswd

# (CRITICAL) ToDo: implement >> `usermode --shell <the shell> ${NEW_USER}` for pycharm remote run and add the ros distro source step
# (Optional) Change default shell for new user
#RUN usermod -s /bin/bash ${NEW_USER}

# ====Jetbrains IDE================================================================================

## (!) pytest-cov › "The pytest-cov package, due to technical restrictions, breaks PyCharm's debugger."
## see https://www.jetbrains.com/help/pycharm/2023.1/run-debug-configuration-py-test.html
RUN pip3 uninstall --yes pytest-cov

## (!) Hack for solving pytest<->pycharm RuntimeError
## `INTERNALERROR> RuntimeError: wrap_controller at 'pytest_runtest_makereport' /usr/local/lib/python3.8/dist-packages/dash/testing/plugin.py:106 did not yield`
## dash==2.8.1 › Solution from https://github.com/plotly/dash/issues/2460
## Version 2.9.0 is responsible for the pytest<->pycharm RuntimeError
RUN pip3 install --no-cache-dir 'dash[testing]!=2.9.0'


CMD [ "bash" ]



