services:


  # ====Dockerized-NorLab Project==================================================================
  project-core-main: # ›› no push build service
    extends:
      file: "../global/docker-compose.global.yaml"
      service: global-service-builder-config
    pull_policy: build # Execute the `build` attribute over pulling the `image` attribute
    build:
      context: project-core
      dockerfile: Dockerfile.template
      args:
        BASE_IMAGE: ${DN_HUB:?err}/${DN_PROJECT_BASE_IMG:?err}
        BASE_IMAGE_TAG: ${DN_IMAGE_TAG:?err}
        DN_PROJECT_GIT_DOMAIN: ${DN_PROJECT_GIT_DOMAIN:?err}   # norlab-ulaval
        DN_PROJECT_GIT_NAME: ${DN_PROJECT_GIT_NAME:?err}   # dockerized-norlab-project-mock
        DN_PROJECT_USER: ${DN_PROJECT_USER:?err}
        DN_PROJECT_UID: ${DN_PROJECT_UID:?err}
        DN_PROJECT_GID: ${DN_PROJECT_GID:?err}

  project-core:
    extends:
      service: project-core-main
    image: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-core:${PROJECT_TAG:?err}
    environment:
      DN_CONTAINER_NAME: ${DN_CONTAINER_NAME:?err}
      DN_ACTIVATE_POWERLINE_PROMT: true
    container_name: ${DN_CONTAINER_NAME}
    depends_on:
      - project-core-main


  # ====Dockerized-NorLab Project restricted=======================================================

  # ....project-develop............................................................................
  project-develop-main: # ›› no push build service
    extends:
      file: "../global/docker-compose.global.yaml"
      service: global-service-builder-config
    pull_policy: build # Execute the `build` attribute over pulling the `image` attribute
    build:
      context: project-develop
      dockerfile: Dockerfile
      pull: false # Use the local image store to execute the FROM directive
      args:
        BASE_IMAGE: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-core
        BASE_IMAGE_TAG: ${PROJECT_TAG:?err}
        DN_SSH_SERVER_USER: dna-non-interactive-ros2
        DN_SSH_SERVER_PORT: 2222
        DN_GDB_SERVER_PORT: 7777
    depends_on:
      - project-core

  project-develop-test-ssh-user:
    extends:
      service: project-develop-main
    build:
      target: test-ssh-user
    depends_on:
      - project-develop-main

  project-develop-test-project-user:
    extends:
      service: project-develop-main
    build:
      target: test-project-user
    depends_on:
      - project-develop-main

  project-develop:
    extends:
      service: project-develop-main
    pull_policy: build # Execute the `build` attribute over pulling the `image` attribute
    image: ${DN_PROJECT_HUB}/${DN_PROJECT_IMAGE_NAME}-develop:${PROJECT_TAG:?err}
    depends_on:
      - project-develop-test-ssh-user
      - project-develop-test-project-user

  # ....project-deploy.............................................................................
  project-deploy-main: # ›› no push build service
    extends:
      file: "../global/docker-compose.global.yaml"
      service: global-service-builder-config
    build:
      context: project-deploy
      dockerfile: Dockerfile
      additional_contexts:
        context-dn-project-local-src-path: ${SUPER_PROJECT_ROOT:?err} # For DN test only, point to super project in DNA
      pull: false # Use the local image store to execute the FROM directive
      args:
        BASE_IMAGE: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-core
        BASE_IMAGE_TAG: ${PROJECT_TAG:?err}
        BUILDKIT_CONTEXT_KEEP_GIT_DIR: 1
    depends_on:
      - project-core

  project-deploy-tester:
    extends:
      service: project-deploy-main
    build:
      target: test
    depends_on:
      - project-deploy-main

  project-deploy:
    extends:
      service: project-deploy-main
    pull_policy: build # Execute the `build` attribute over pulling the `image` attribute
    image: ${DN_PROJECT_HUB}/${DN_PROJECT_IMAGE_NAME}-deploy:${PROJECT_TAG:?err}
    depends_on:
      - project-deploy-tester

