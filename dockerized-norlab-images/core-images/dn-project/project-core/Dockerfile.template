
ARG BASE_IMAGE
ARG BASE_IMAGE_TAG
FROM ${BASE_IMAGE:?err}:${BASE_IMAGE_TAG:?err} AS project-setup

# ====Dockerized-NorLab-project configuration step=================================================
# eg: f1tenth_controller, NorLab_MPPI
ARG DN_PROJECT_GIT_NAME
ENV DN_PROJECT_GIT_NAME=${DN_PROJECT_GIT_NAME:?'Build argument needs to be set and non-empty.'}
# eg: norlab-ulaval, vaul-ulaval
ARG DN_PROJECT_GIT_DOMAIN
ENV DN_PROJECT_GIT_DOMAIN=${DN_PROJECT_GIT_DOMAIN:?'Build argument needs to be set and non-empty.'}

ENV DN_PROJECT_PATH=${DN_DEV_WORKSPACE}/src/${DN_PROJECT_GIT_NAME}

ARG DN_PROJECT_USER
ARG DN_PROJECT_UID
ARG DN_PROJECT_GID
ENV DN_PROJECT_USER=${DN_PROJECT_USER:?'Build argument needs to be set and non-empty.'}
ENV DN_PROJECT_UID=${DN_PROJECT_UID:?'Build argument needs to be set and non-empty.'}
ENV DN_PROJECT_GID=${DN_PROJECT_GID:?'Build argument needs to be set and non-empty.'}

COPY --from=context-dn-container-tools ./dn_project_core_init.bash .
RUN source ./dn_project_core_init.bash \
    && rm ./dn_project_core_init.bash


# ====User Project custom steps====================================================================
FROM project-setup AS project-custom-docker-steps

# ToDo: add custom step here


# ====Project custom python libraries==============================================================
FROM project-custom-docker-steps AS project-custom-python-libraries
WORKDIR /opt

COPY requirements_manual.txt /requirements_manual.txt
# Doc â€º pip install flag: https://pip.pypa.io/en/stable/cli/pip_install/#options
RUN pip3 install --no-cache-dir -r /requirements_manual.txt  \
    && rm -rf /requirements_manual.txt


# ====Final========================================================================================
FROM project-custom-python-libraries AS final

WORKDIR ${DN_PROJECT_PATH:?'environment variable is not set'}
CMD [ "bash" ]

